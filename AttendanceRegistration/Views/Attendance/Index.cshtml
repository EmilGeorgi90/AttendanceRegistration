@model PaginatedList<AttendanceRegistration.Models.Attendance>

@{
    ViewData["Title"] = "Index";
}
<h2>Index</h2>
<form asp-action="Index" method="get">
    <p>
        Find pr. navn <input type="text" name="SearchString" value="@ViewData["CurrentSearch"]" />
    </p>
    <input type="submit" value="search" class="btn btn-default" />
    <a asp-action="Index">back to full list</a>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().UserId.Fullname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Hours)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().DatesId.ShcoolDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Notes)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            IEnumerable<Attendance>
    attendances = Model.Where(c => c.UserId.Fullname == item.UserId.Fullname && c.DatesId.ShcoolDate == item.DatesId.ShcoolDate.AddDays(+-7) && c.DatesId.ShcoolDate.DayOfWeek != DayOfWeek.Saturday || c.DatesId.ShcoolDate.DayOfWeek != DayOfWeek.Sunday);
            int currentVal = 0;
            foreach (Attendance item2 in attendances)
            {
                if (currentVal > 7 * 4)
                {
                    break;
                }
                currentVal += item2.Hours;
            }
            <tr onclick="clickEvent('@item.UserId.Fullname', @currentVal )">
                <td>
                    @Html.DisplayFor(modelItem => item.UserId.Fullname)
                </td>
                <td class="hours" contenteditable="true" data-Id="@item.AttendanceId" data-notes="@item.Notes">
                    @Html.DisplayFor(modelItem => item.Hours)
                </td>
                <td contenteditable="true">
                    @Html.DisplayFor(modelItem => item.DatesId.ShcoolDate)
                </td>
                <td contenteditable="true" class="notes" data-Id="@item.AttendanceId" data-hours="@item.Hours">
                    @Html.DisplayFor(modelItem => item.Notes)
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="demo-container">
    <div id="chart-demo">
        <div id="pie"></div>
        <div class="options">
            <div class="caption">Options</div>
            <div class="option">
                <span>Label Overlapping Resolution Mode</span>
                <div id="types"></div>
            </div>
        </div>
    </div>
</div>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<nav aria-label="Page navigation">
    <ul class="pagination">
        <li><a asp-action="index" asp-route-PageIndex="@(Model.PageIndex - 1)" asp-route-SearchString="@ViewData["currentSearch"]" class="btn btn-default @prevDisabled">prev</a></li>
        <li><a asp-action="index" asp-route-PageIndex="@(Model.PageIndex + 1)" asp-route-SearchString="@ViewData["currentSearch"]" class="btn btn-default @nextDisabled">next</a></li>
    </ul>
</nav>
